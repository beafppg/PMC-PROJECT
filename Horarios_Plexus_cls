/*****************************************************************************************
*   Desarrollado por:       Freeway Premium Outsorcing                                   *
*   Autor:                  Eduardo Godinez Loza                                         *
*   Proyecto:               Plexus                                                       *
*   Descripción:            Clases para la asignacion de Horarios a Casos                *
*                                                                                        *   
*   Cambios (Versiones)                                                                  *
*   --------------------------------------------------------------------------           *
*   No.     Fecha               Autor                   Descripción                      *
*   ------  ----------  ----------------------      ---------------------------          *
*   1.0     30-11-2016   Eduardo Godinez Loza(EGL)       Creación Trigger                *
*   1.1     25-05-2017   Eduardo Godinez  Loza(EGL)      Se agrega filtro POS para       *
                                                         seleccion de horario            *
*   2.0     13-08-2018   Eduardo Godinez  Loza(EGL)     Se agrega proceso Color Center
******************************************************************************************/
public with sharing class Horarios_Plexus_cls {
    
    set<Id> IdCaso = new set<Id>(); //Guardaremos los Id de los casos a actualizar un horario
   
    //Metodo para realizar la asignacion de Horarios
    public void calcular(Set<Id> IdCaso){
        //Igualamos la variable que recibimos con la variable global de la clase
        this.IdCaso = IdCaso;
        List<Horarios_Plexus__c> Hr = new List<Horarios_Plexus__c>();
        //En esta lista se alamacenaran los casos afectados para despues actualizar
        List<Case> UpdateCasos = new List<Case>();
        //Se hace una consulta a todos tipos de horarios
            if (Test.isRunningTest())Hr = [Select Id, area__c, Prioridad__c, Tipo__c, Zona__c, POS__c, Sistema__c, TipoReporte_CC__c from Horarios_Plexus__c where Activo__c =: true];
            if (!Test.isRunningTest()) Hr = [Select Id, area__c, Prioridad__c, Tipo__c, Zona__c, POS__c, Sistema__c, TipoReporte_CC__c from Horarios_Plexus__c where Activo__c =: true];
        //Obtenemos todos los casos para proceder a modificarlos
        List<Case>  casos = new List<Case>();
            if (Test.isRunningTest())casos = ([Select Id, RecordType.Name, Area_Asignacion__c, Priority, Zona_Tienda__c, Clasificacion__c, Horarios_Plexus__c, PointOfSales__c, TipoRegistro__c, TipoReporte_CC__c, ZonaColorCenter__c from Case where Id=:IdCaso]);
            if (!Test.isRunningTest())casos = ([Select Id, RecordType.Name, Area_Asignacion__c, Priority, Zona_Tienda__c, Clasificacion__c, Horarios_Plexus__c, PointOfSales__c, TipoRegistro__c, TipoReporte_CC__c, ZonaColorCenter__c from Case where Id=:IdCaso]);
            
        //Se recorren los casos junto con los horarios donde se encuentren las coincidencias se asigna el horario al caso
        for(Case cs : casos){
            if(cs.RecordType.Name == 'Plexus'){
                if(cs.PointOfSales__c == 'Plexus'){
                   if(cs.Area_Asignacion__c == 'Soporte' || (cs.Area_Asignacion__c == 'Capa' && cs.Clasificacion__c == 'Solicitud')){
                        for(Horarios_Plexus__c hora: Hr){
                        //system.assertEquals(null,'Área: '+hora.area__c+'=='+cs.Area_Asignacion__c+'  Prioridad: '+hora.Prioridad__c +'=='+cs.Priority+'   Zona: '+hora.Zona__c+'=='+cs.Zona_Tienda__c+'   Tipo:'+hora.Tipo__c+'=='+cs.Clasificacion__c);
                            if(hora.area__c == cs.Area_Asignacion__c && hora.Prioridad__c == cs.Priority && hora.Zona__c == cs.Zona_Tienda__c && hora.Tipo__c == cs.Clasificacion__c && hora.POS__c == 'Plexus' && hora.Sistema__c == 'Plexus'){
                                cs.Horarios_Plexus__c = hora.Id;
                                    UpdateCasos.add(cs);
                            }
                        }
                    }
                    //en este tipo se situacion se manejan los horarios que no manejan campo Zona
                    else{
                        for(Horarios_Plexus__c hora: Hr){
                            if(hora.area__c == cs.Area_Asignacion__c && hora.Prioridad__c == cs.Priority && hora.Tipo__c == cs.Clasificacion__c && hora.POS__c == 'Plexus' && hora.Sistema__c == 'Plexus'){
                                cs.Horarios_Plexus__c = hora.Id;
                                UpdateCasos.add(cs);
                            }
                        } 
                    }
                }// fin if(cs.PointOfSales__c == 'Plexus')
                //Se realiza un filtro dependiendo el POS del caso para asignar un diferente tipo de horario en este caso 'Front''
                else{
                    if(cs.PointOfSales__c == 'Front'){
                        if(cs.Area_Asignacion__c == 'Soporte' || (cs.Area_Asignacion__c == 'Capa' && cs.Clasificacion__c == 'Solicitud')){
                            for(Horarios_Plexus__c hora: Hr){
                                if(hora.area__c == cs.Area_Asignacion__c && hora.Prioridad__c == cs.Priority &&
                                    hora.Zona__c == cs.Zona_Tienda__c && hora.Tipo__c == cs.Clasificacion__c && hora.POS__c == 'Front' && hora.Sistema__c == 'Plexus'){
                                    cs.Horarios_Plexus__c = hora.Id;
                                    UpdateCasos.add(cs);
                                }
                            }
                        }
                        //en este tipo se situacion se manejan los horarios que no manejan campo Zona
                        else{
                            for(Horarios_Plexus__c hora: Hr){
                               if(hora.area__c == cs.Area_Asignacion__c && hora.Prioridad__c == cs.Priority && hora.Tipo__c == cs.Clasificacion__c && hora.POS__c == 'Front' && hora.Sistema__c == 'Plexus'){
                                        cs.Horarios_Plexus__c = hora.Id;
                                        UpdateCasos.add(cs);
                                    }
                            } 
                        }
                    }//fin if(cs.PointOfSales__c == 'Front')
                }
            }// fin if(cs.RecordType.Name == 'Plexus')
            if(cs.RecordType.Name == 'Color Center'){
                for(Horarios_Plexus__c hora: Hr){
                    if(cs.TipoReporte_CC__c == 'Instalación'){
                        if(hora.area__c == cs.Area_Asignacion__c && hora.TipoReporte_CC__c == cs.TipoReporte_CC__c && hora.Sistema__c == 'Color Center'){
                            cs.Horarios_Plexus__c = hora.Id;
                            UpdateCasos.add(cs);
                         }
                    }else{
                        if(hora.area__c == cs.Area_Asignacion__c && hora.Zona__c == cs.ZonaColorCenter__c && 
                            hora.TipoReporte_CC__c == cs.TipoReporte_CC__c && hora.Sistema__c == 'Color Center'){
                            cs.Horarios_Plexus__c = hora.Id;
                            UpdateCasos.add(cs);
                        }
                    }
                }
            }//fin if(cs.RecordType.Name == 'Color Center')
        }//fin for(Case cs : casos)
        if(UpdateCasos.size()>0){update UpdateCasos;}   
    }//fin metodo calcular
}//fin de clase
